<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee

	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">



	<display-name>Archetype Created Web Application</display-name>

	<context-param>  
        <description>配置Spring配置文件路径</description>  
        <param-name>contextConfigLocation</param-name>  
        <!-- 如果是监听多个文件，可用‘，’隔开 -->  
        <param-value>classpath:spring-*.xml</param-value>  
    </context-param>  
    
    <context-param>  
        <param-name>spring.profiles.active</param-name>  
        <param-value>dev</param-value>  
    </context-param>  
    <context-param>  
        <param-name>spring.profiles.default</param-name>  
        <param-value>dev</param-value>  
    </context-param>  
    <context-param>  
        <param-name>spring.liveBeansView.mbeanDomain</param-name>  
        <param-value>dev</param-value>  
    </context-param>
  
    <listener>  
        <description>配置Spring上下文监听器</description>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
  
  
    <listener>  
        <description>Introspector缓存清除监听器</description>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>  
    <listener>  
        <description>request监听器</description>  
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>  
    </listener>  
  
  
<!-- <filter>
    <filter-name>CORS Filter</filter-name>
    <filter-class>org.ebaysf.web.cors.CORSFilter</filter-class>
    <init-param>
      <description>A comma separated list of allowed origins. Note: An '*' cannot be used for an allowed origin when using credentials.</description>
      <param-name>cors.allowed.origins</param-name>
      <param-value>http://192.168.1.130,http://localhost:8080</param-value>
    </init-param>
    <init-param>
      <description>A comma separated list of HTTP verbs, using which a CORS request can be made.</description>
      <param-name>cors.allowed.methods</param-name>
      <param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
    </init-param>
    <init-param>
      <description>A comma separated list of allowed headers when making a non simple CORS request.</description>
      <param-name>cors.allowed.headers</param-name>
      <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
    </init-param>
    <init-param>
      <description>A comma separated list non-standard response headers that will be exposed to XHR2 object.</description>
      <param-name>cors.exposed.headers</param-name>
      <param-value></param-value>
    </init-param>
    <init-param>
      <description>A flag that suggests if CORS is supported with cookies</description>
      <param-name>cors.support.credentials</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <description>A flag to control logging</description>
      <param-name>cors.logging.enabled</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <description>Indicates how long (in seconds) the results of a preflight request can be cached in a preflight result cache.</description>
      <param-name>cors.preflight.maxage</param-name>
      <param-value>10</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CORS Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> -->
    <!-- 配置Spring字符编码过滤器 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
  
<!--CORS 跨域资源访问-->
 <!--  <filter>         
   <filter-name>CORS</filter-name>  
   <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>  
   <init-param>  
    <param-name>cors.allowOrigin</param-name>  
       <param-value>*</param-value>  
   </init-param>  
   <init-param>  
    <param-name>cors.supportedMethods</param-name>  
       <param-value>GET, POST</param-value>  
   </init-param>  
   <init-param>  
    <param-name>cors.supportedHeaders</param-name>  
       <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>  
   </init-param>  
   <init-param>  
       <param-name>cors.exposedHeaders</param-name>  
       <param-value>Set-Cookie</param-value>  
   </init-param>  
   <init-param>  
       <param-name>cors.supportsCredentials</param-name>  
       <param-value>true</param-value>  
   </init-param>
  </filter>  
  <filter-mapping>
      <filter-name>CORS</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>-->

	<!-- <filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<param-value>192.168.1.130//face_pic</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<init-param>
			<param-name>cors.support.credentials</param-name>
			<param-value>true</param-value>
		</init-param>

	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>  -->

  
  
    <!--log4j配置文件加载-->  
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>classpath:log4j.properties</param-value>  
    </context-param>  
    <!--启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化-->  
    <context-param>  
        <param-name>log4jRefreshInterval</param-name>  
        <param-value>1800000</param-value>  
    </context-param>  
    <!--spring log4j监听器-->  
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>  
  
    <!-- Spring MVC 核心控制器 DispatcherServlet 配置开始 -->  
    <servlet>  
        <servlet-name>SpringMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <!-- 可以通过contextConfigLocation来自定义SpringMVC配置文件的位置，如不指定，则默认在WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，  
             此时文件名必须为[<servlet-name>]-servlet.xml，否则会出错-->  
        <!--以下init-param是自定义SpringMVC的配置文件的位置 -->  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <!-- 拦截设置 -->  
    <servlet-mapping>  
        <servlet-name>SpringMVC</servlet-name>  
        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping>  
    <!-- Spring MVC 核心配置结束 -->  
  
    <!-- 激活Tomcat的defaultServlet来处理静态文件 -->  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>/static/*</url-pattern>  
    </servlet-mapping>  
  
    <!-- session 时间 -->  
    <session-config>  
        <session-timeout>30</session-timeout>  
    </session-config>  
  

</web-app>